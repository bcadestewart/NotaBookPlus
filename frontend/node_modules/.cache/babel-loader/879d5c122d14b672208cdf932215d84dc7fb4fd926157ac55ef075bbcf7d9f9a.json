{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brandon\\\\Desktop\\\\Human Factors\\\\NotaBookPlus\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Sidebar from \"../components/Sidebar\";\nimport NoteViewer from \"../components/NoteViewer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(null);\n\n  // Load notes from local storage on page load\n  useEffect(() => {\n    const storedNotes = JSON.parse(localStorage.getItem(\"notes\")) || [];\n    setNotes(storedNotes);\n    if (storedNotes.length > 0) setSelectedNote(storedNotes[0]);\n  }, []);\n\n  // Save notes to local storage whenever they change\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  // Function to add a new note\n  const addNote = () => {\n    const newNote = {\n      id: Date.now(),\n      title: \"New Note\",\n      content: \"\"\n    };\n    const updatedNotes = [...notes, newNote];\n    setNotes(updatedNotes);\n    setSelectedNote(newNote);\n  };\n\n  // Function to update note content\n  const updateNoteContent = (id, newContent) => {\n    const updatedNotes = notes.map(note => note.id === id ? {\n      ...note,\n      content: newContent\n    } : note);\n    setNotes(updatedNotes);\n  };\n\n  // Function to delete a note\n  const deleteNote = id => {\n    const updatedNotes = notes.filter(note => note.id !== id);\n    setNotes(updatedNotes);\n    setSelectedNote(updatedNotes.length > 0 ? updatedNotes[0] : null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      notes: notes,\n      onSelect: setSelectedNote,\n      selectedNote: selectedNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), selectedNote && /*#__PURE__*/_jsxDEV(NoteViewer, {\n      note: selectedNote,\n      onUpdate: updateNoteContent,\n      onDelete: deleteNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNote,\n      className: \"absolute bottom-4 right-4 p-2 bg-blue-500 text-white rounded hover:bg-blue-700 hover:scale-105 transition-transform\",\n      children: \"Add Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"qbGquP2p7RG0CZcWa6OuyKTgb44=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","Sidebar","NoteViewer","jsxDEV","_jsxDEV","Home","_s","notes","setNotes","selectedNote","setSelectedNote","storedNotes","JSON","parse","localStorage","getItem","length","setItem","stringify","addNote","newNote","id","Date","now","title","content","updatedNotes","updateNoteContent","newContent","map","note","deleteNote","filter","className","children","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","onUpdate","onDelete","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Brandon/Desktop/Human Factors/NotaBookPlus/frontend/src/pages/Home.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport NoteViewer from \"../components/NoteViewer\";\r\n\r\nexport default function Home() {\r\n  const [notes, setNotes] = useState([]);\r\n  const [selectedNote, setSelectedNote] = useState(null);\r\n\r\n  // Load notes from local storage on page load\r\n  useEffect(() => {\r\n    const storedNotes = JSON.parse(localStorage.getItem(\"notes\")) || [];\r\n    setNotes(storedNotes);\r\n    if (storedNotes.length > 0) setSelectedNote(storedNotes[0]);\r\n  }, []);\r\n\r\n  // Save notes to local storage whenever they change\r\n  useEffect(() => {\r\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\r\n  }, [notes]);\r\n\r\n  // Function to add a new note\r\n  const addNote = () => {\r\n    const newNote = { id: Date.now(), title: \"New Note\", content: \"\" };\r\n    const updatedNotes = [...notes, newNote];\r\n    setNotes(updatedNotes);\r\n    setSelectedNote(newNote);\r\n  };\r\n\r\n  // Function to update note content\r\n  const updateNoteContent = (id, newContent) => {\r\n    const updatedNotes = notes.map((note) =>\r\n      note.id === id ? { ...note, content: newContent } : note\r\n    );\r\n    setNotes(updatedNotes);\r\n  };\r\n\r\n  // Function to delete a note\r\n  const deleteNote = (id) => {\r\n    const updatedNotes = notes.filter((note) => note.id !== id);\r\n    setNotes(updatedNotes);\r\n    setSelectedNote(updatedNotes.length > 0 ? updatedNotes[0] : null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <Sidebar notes={notes} onSelect={setSelectedNote} selectedNote={selectedNote} />\r\n      {selectedNote && <NoteViewer note={selectedNote} onUpdate={updateNoteContent} onDelete={deleteNote} />}\r\n      <button\r\n        onClick={addNote}\r\n        className=\"absolute bottom-4 right-4 p-2 bg-blue-500 text-white rounded hover:bg-blue-700 hover:scale-105 transition-transform\"\r\n      >\r\n        Add Note\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}